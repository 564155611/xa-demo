#\u6253\u5370sql\u8DEF\u7531\u7ED3\u679C
spring.shardingsphere.props.sql-show=true
# \u914D\u7F6E\u771F\u5B9E\u6570\u636E\u6E90
spring.shardingsphere.datasource.names=m0,s0,m1,s1,m2,s2
# \u914D\u7F6E\u7B2C 1 \u4E2A\u4E3B\u4ECE
spring.shardingsphere.datasource.m0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.m0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m0.jdbc-url=jdbc:mysql://192.168.12.161:3306/sharding1?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.m0.username=root
spring.shardingsphere.datasource.m0.password=123456
#\u4ECE
spring.shardingsphere.datasource.s0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.s0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.s0.jdbc-url=jdbc:mysql://192.168.12.161:3307/sharding1?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.s0.username=root
spring.shardingsphere.datasource.s0.password=123456
#\u4E3B\u4ECE\u8D1F\u8F7D\u7B56\u7565\u914D\u7F6E
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms0.write-data-source-name=m0
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms0.read-data-source-names[0]=s0
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms0.load-balancer-name=random

# \u914D\u7F6E\u7B2C 2 \u4E2A\u4E3B\u4ECE
spring.shardingsphere.datasource.m1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.jdbc-url=jdbc:mysql://192.168.12.162:3306/sharding2?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=123456
#\u4ECE
spring.shardingsphere.datasource.s1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.s1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.s1.jdbc-url=jdbc:mysql://192.168.12.162:3307/sharding2?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.s1.username=root
spring.shardingsphere.datasource.s1.password=123456
#\u4E3B\u4ECE\u8D1F\u8F7D\u7B56\u7565\u914D\u7F6E
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms1.write-data-source-name=m1
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms1.read-data-source-names[0]=s1
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms1.load-balancer-name=round-robin

# \u914D\u7F6E\u7B2C 3 \u4E2A\u4E3B\u4ECE
spring.shardingsphere.datasource.m2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m2.jdbc-url=jdbc:mysql://192.168.12.163:3306/sharding3?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.m2.username=root
spring.shardingsphere.datasource.m2.password=123456
#\u4ECE
spring.shardingsphere.datasource.s2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.s2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.s2.jdbc-url=jdbc:mysql://192.168.12.163:3307/sharding3?characterEncoding=UTF-8&useSSL=false&useUnicode=true&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.s2.username=root
spring.shardingsphere.datasource.s2.password=123456
#\u4E3B\u4ECE\u8D1F\u8F7D\u7B56\u7565\u914D\u7F6E
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms2.write-data-source-name=m2
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms2.read-data-source-names[0]=s2
spring.shardingsphere.rules.readwrite-splitting.data-sources.ms2.load-balancer-name=random

#\u8D1F\u8F7D\u5747\u8861\u7684\u7B56\u7565\u5F15\u7528
spring.shardingsphere.rules.readwrite-splitting.load-balancers.random.type=RANDOM
spring.shardingsphere.rules.readwrite-splitting.load-balancers.round-robin.type=ROUND_ROBIN


# \u914D\u7F6E t_order \u8868\u89C4\u5219
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ms$->{0..2}.t_order_$->{0..1}
# \u81EA\u52A8\u751F\u6210\u5217
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=snowflake
# \u914D\u7F6E\u5206\u5E93\u7B56\u7565
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=database-inline
# \u914D\u7F6E\u5206\u8868\u7B56\u7565
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=order-inline

# \u914D\u7F6E t_order_item \u8868\u89C4\u5219...
spring.shardingsphere.rules.sharding.tables.t_order_item.actual-data-nodes=ms$->{0..2}.t_order_item_$->{0..1}
# \u81EA\u52A8\u751F\u6210\u5217
spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.key-generator-name=snowflake
# \u914D\u7F6E\u5206\u5E93\u7B56\u7565
spring.shardingsphere.rules.sharding.tables.t_order_item.database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_order_item.database-strategy.standard.sharding-algorithm-name=database-inline
# \u914D\u7F6E\u5206\u8868\u7B56\u7565
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-algorithm-name=order-item-inline


# \u5F15\u7528\u7684id\u751F\u6210\u7B56\u7565
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
#\u5DE5\u4F5C\u673A\u5668\u552F\u4E00\u6807\u8BC6,\u53EF\u4EE5\u914D\u7F6E[0,1024)
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=0
#\u6700\u5927\u6296\u52A8\u4E0A\u9650\u503C.[0,4096)
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.max-vibration-offset=1
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.max-tolerate-time-difference-milliseconds=10

# \u914D\u7F6E \u5206\u7247\u7B97\u6CD5
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ms$->{user_id % 3}
spring.shardingsphere.rules.sharding.sharding-algorithms.order-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.order-inline.props.algorithm-expression=t_order_$->{order_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.order-item-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.order-item-inline.props.algorithm-expression=t_order_item_$->{order_id % 2}


spring.shardingsphere.rules.sharding.binding-tables[0]=t_order,t_order_item